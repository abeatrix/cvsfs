#! /bin/sh
#
# /etc/init.d/cvsvfsd
#
### BEGIN INIT INFO
# Provides:       cvsvfsd
# Required-Start: $remote_fs
# Required-Stop:
# Default-Start:  2 3 5
# Default-Stop:
# Description:    cvsfs-Daemon
### END INIT INFO

# Determine the base and follow a runlevel link name.
base=${0##*/}
link=${base#*[SK][0-9][0-9]}

# The echo return value for success (defined in /etc/rc.config).
return=$rc_done
case "$1" in
    start)
        echo -n "Starting cvsfsd:"
	if [ -e /proc/cvsfs ] || /sbin/modprobe cvsfs ; then
            echo -n " ($OPTS) "
            startproc /usr/local/sbin/cvsfsd $OPTS
	else
	    echo -n " not supported by kernel"
            rc_failed 6
	fi
	rc_status -v
        ;;
    stop)
        echo -n "Shutting down apmd:"
	if [ -e /proc/cvsfs ] ; then
            killproc -TERM /usr/sbin/cvsfsd
	else
	    echo -n " not supported by kernel"
            rc_failed 6
	fi
        rc_status -v
        ;;
    restart)
        ## Stop the service and regardless of whether it was
        ## running or not, start it again.
	$0 stop
	$0 start
        # Remember status and be quiet
        rc_status
	;;
    status)
        # Status has a slightly different for the status command:
        # 0 - service running
        # 1 - service dead, but /var/run/  pid  file exists
        # 2 - service dead, but /var/lock/ lock file exists
        # 3 - service not running

        echo -n "Checking for apmd: "
        # NOTE: checkproc returns LSB compliant status values.
        checkproc /usr/sbin/cvsfsd
        rc_status -v
        ;;
    *)
        echo "Usage: $0 {start|stop|restart|status}"
	rc_failed 3
	rc_status -v
esac
rc_exit
