This is the first attempt to provide a file system for cvs.


Intention:
----------

The first reason for writing this virtual file system driver was the (in my
opinion) bad usability of cvs. On time i had to check the source of XFree86
to determine what and how it have been changed. To do that i have to checkout
the whole tree of XFree86. This took hours !
My imagination was to access cvs projects as they were ordinary files on
the local disk. So cvsfs was born.

During development some other possible advantages came out.

- When building a package via make it sould be possible to log all file
  accesses to cvs-hosted files. At the end you have a full list of files
  which were required a package. Using a specialized make a subsequent
  run will enable it to analyze the dependencies evaluated during an
  earlier run. This will result in a simplified makefile where each
  target is asigned only the direct source file. The other dependencies
  (*.h files, etc.) can be detected using the file system driver.

- Navigation can be done using ordinary file manager (mc, konquerer, etc.)

- you do not have to checkout files to run make.

- you may use different userids for different modules on the same cvs
  repository.

- others to come ...


Building the package:
---------------------

First change to te cvsfs-<version> directory. Then enter 'make install'.
This will compile all necessary files and install them to the proper
directories. You must be root to do that !

Usage:
------
  mount -t cvsfs [-o options] //<cvs-pserver>/<module> <mount point>
  
  <cvs-pserver>       The cvs pserver to access. This may be a hostname
                      (with or without domain) or a ip-address.
		      Only ip v4 is actually supported !
  <mount point>       The directory where the cvs tree is to be mounted.

Options:
  user=<username>     The username to be used for authentication at the
                      cvs-pserver. If not given the user 'anaonymous' is
		      applied.
  password=<secret>   The password for the username given above. If omitted
                      the a empty password is applied.
  cvsroot=<root>      The cvs root directory. If omitted then /cvsroot is
                      used as default.

		      
If you specify for the actual cvs tool the environment variable

  CVSROOT=:pserver:humbia@sorceforge.net:/cvsroot/project
  
the password is 'secret', the project is named 'myproject' and the moutpoint
will be /humbia then the following command is required:

  mount -t cvsfs -o user=humbia,password=secret,cvsroot=/cvsroot/project \
        //sorceforge.net/myproject /humbia


Hint:
-----

mount has version (mount -V) mount-2.10q. This mount version looks for unknown
file systems to locate /bin/mount.<filesystem>.
This file (in our case mount.cvsfs) is a one-line script which himself calls
cvsmount which do the real work. Execute cvsmount without parameters to get
a small help.
If this file is found it is executed with the parameters passed to mount.
I don't know whether or not earlier or later versions on mount have this
behaviour. If your version does not do this search then you can use cvsmount
instead.


Environment:
------------

Tested (and developed) with SuSE 7.1 and 7.2 (i386).
I can not guarantee that it will compile on other platforms and/or other
linux distributions.
The module supports only kernels 2.4.x
The vfs module may have build problems on nonstandard linux builds with
versions like used for SuSE 7.1 (here: 2.4.0-4GB). It refuses to load (can
be tested with 'modprobe cvsfs') due to not matching kernel versions (expects
2.4.0 but system says it is 2.4.0-4GB). Actually i am rather new to kernel
programming - so a hint to solve this problem is welcome.


Limitations:
------------

This tool actually only retrieves the file names and directories at the HEAD
branch. Reading of files is supported (hopefully).
There are some timing limits inside the kernel module for responses from
the cvs-pserver. They may exceed for slow remote machines. Have a look to
cvsfs/proc.c to change this limitation.
Only the pserver method of cvs is supported. May be extended later.


Resulting files:
----------------

Followin there is a list of files generated by make and where they are
installed by calling 'make install'. You must be root to do this.

 source              ! destination
---------------------+--------------------------------------------------------
cvsfs/cvsfs.o        ! /lib/modules/<kernel-version>/kernel/fs/cvsfs/cvsfs.o
cvsmount/mount.cvsfs ! /sbin/mount.cvsfs
cvsmount/cvsmount    ! /usr/bin/cvsmount
cvsmnt/cvsmnt        ! /usr/bin/cvsmnt

Actually there is no configure script available. So if you want the get an
other behaviour you have to modify the Makefile's yourself.
If someone provides me with a configure script - i will be glad since my
knowledge on that subject is very low.
