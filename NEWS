Version 1.1.3:
Added IOCTL interface for files. Actually only one function is
supported - rettrieve version number of actual visible file.
A new tool was created to support this:
  cvsctl version <file path>
A bug when a file have to be truncated (but wasn't done) has been
fixed.

Version 1.1.2:
First version with write capabilities. You are now allowed to create
and delete files and directories. This is limited to files and
directories which are not in the CVS repository.
But anyway, if for example a build process which do not overwrite
existing file (i.e. creates only new files) it should work.

Version 1.1.1:
Bugfix release. The daemon enters an endless loop if the CVS file
system mounted is deeper than 1 level.

Version 1.1.0:
Rewrite kernel module to communicate via device to cvs server. This
requires the a server process to be started. This server process is
named cvsfsd and is communicating with the kernel module via the
devices allocated under /dev/cvsfs.
A first version of file caching has been introduced with the server
process (cvsfsd daemon). It stores the files retrieved from the cvs
server under /var/cache/cvsfs. This is actually hardcoded.

Version 1.0.9:
Add license info to the kernel module.
Add /dev and devfs support (latter untested).

Version 1.0.8:
Fix compile errors of the cvsfs kernel module on RedHat installations.
The errors were reported for RedHat 7.0 and 7.2. Others may also be
involved.

Version 1.0.7:
The version 1.0.6 was wrongly packaged. All header files were left out.
Fixed re-release.

Version 1.0.6:

Revamp the source code to be in line with GNU coding standards.
Modified the caching strategy to speed up the scan of the directories.


Version 1.0.5:

Automake and autoconf support added. Thanks to Johan Rydberg.
Allow users to address specific versions of the files in cvs. For
example:
  ls filename@@1.1
  
This will list the file 'filename' with revision '1.1'. The '@@' is
used as delimiter. This should also work for all commands which access
a file by its name (f.e. cat, zip, etc.).
